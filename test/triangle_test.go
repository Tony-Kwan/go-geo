package test

import (
	"fmt"
	"github.com/Tony-Kwan/go-geo/geo/io/wkt"
	"github.com/atotto/clipboard"
	"math/rand"
	"strings"
	"testing"
	"time"
)

func TestTriangle_IsDisjoint(t *testing.T) {
	var wktStr = "POLYGON((120.514633065431 30.261044062306482,120.515457506322 30.255543146711688,120.51572370882499 30.250001097220093,120.51542974122698 30.244460095506994,120.514577934925 30.23896230815521,120.51317486382 30.2335495658608,120.511231291528 30.2282630454078,120.50876208686698 30.223142956821277,120.50578610836598 30.2182282380639,120.502326058737 30.213556259576904,120.498408310463 30.209162540888514,120.49406270390999 30.205080481413617,120.489322319498 30.201341107461005,120.48422322571902 30.197972837336494,120.477138 30.194198,120.44377455516499 30.17918527223668,120.437956076 30.176847020703107,120.431924238393 30.174955779162815,120.425724875925 30.173525915018303,120.419405087779 30.172568290129803,120.41301288276401 30.1720901787632,120.40659681661599 30.172095212647406,120.400205625274 30.17258335354508,120.39388785682 30.173550893542412,120.387691504807 30.17499048305217,120.381663645678 30.176891186326316,120.375850082954 30.17923856406601,120.370295000832 30.18201478252149,120.36504062975 30.185198748272384,120.358116 30.190421999999998,120.33539312139702 30.230560813964402,120.33469713977098 30.236074942036495,120.334560022532 30.241620494862914,120.334982907628 30.247155269232408,120.33596267036802 30.252637136854602,120.33749194435602 30.258024365139136,120.339559174807 30.263275935175002,120.342148703929 30.268351854479178,120.34524088779999 30.273213462117084,120.348812243914 30.277823723849096,120.35283562834101 30.2821475150311,120.3572804412 30.286151889082504,120.362112858906 30.28980632944392,120.36729609145699 30.293082983070803,120.37620600000001 30.297472999999997,120.40950826987601 30.3091259761962,120.415311292418 30.3115070111499,120.421332861561 30.3134420843015,120.42752707781901 30.314916441792406,120.433846718053 30.31591884187779,120.44024359735 30.3164416411243,120.446668938442 30.316480853024885,120.453073745767 30.316036178574294,120.459409181253 30.315111008561303,120.46562693885498 30.31371239756392,120.47167961492602 30.311851009847587,120.47752107151001 30.309541037594002,120.483106789717 30.30680009209952,120.49184500000001 30.30125000000001,120.514633065431 30.261044062306482))"
	var polygon = wkt.MustPolygon(wktReader.Read(wktStr))
	tris, err := polygon.Triangulate()
	if err != nil {
		t.Error(err)
		return
	}
	n := len(tris)
	mat := make([][]int, n)
	for i := 0; i < n; i++ {
		mat[i] = make([]int, n)
	}
	for i := 0; i < n; i++ {
		for j := 0; j < n; j++ {
			if tris[i].IsDisjoint(&tris[j]) {
				mat[i][j] = 0
			} else {
				mat[i][j] = 1
			}
		}
	}
	for _, m := range mat {
		fmt.Println(m)
	}

	rand.Seed(time.Now().UnixNano())
	rIdx := rand.Intn(n)
	wkts := []string{wktStr, tris[rIdx].String(), tris[rIdx].String(), tris[rIdx].String(), tris[rIdx].String()}
	cnt := 0
	for i := range mat[rIdx] {
		if mat[rIdx][i] == 1 {
			cnt++
			wkts = append(wkts, tris[i].String())
		}
	}
	fmt.Println("joint cnt:", cnt)
	s := fmt.Sprintf("GEOMETRYCOLLECTION(%s)", strings.Join(wkts, ", "))
	clipboard.WriteAll(s)
}
